/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uts_bdl_ria;

import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author IT GRC
 */
public class data_buku extends javax.swing.JFrame {

    private final String[] columns = {"kode_buku", "ISBN", "judul", "pengarang", "penerbit", "genre", "harga","stok"};
    private final ArrayList<String[]> dataList = new ArrayList<>();
    Connection conn;
    Statement stmt;
    PreparedStatement preparedStatement;
    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/TOKO_BUKU";
    String user = "postgres";
    String password = "nidzom15";

    /**
     * Creates new form pelanggan
     */
    public data_buku() {
        initComponents();
        tampil();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBuku = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        cbFilter = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPengarang = new javax.swing.JTextField();
        txtPenerbit = new javax.swing.JTextField();
        txtGenre = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATA BUKU");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Kode Buku");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("ISBN");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Judul Buku");

        txtKode.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtISBN.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtJudul.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        btnInsert.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tbBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBuku);

        txtSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cbFilter.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kode Buku", "ISBN", "Judul Buku", "Pengarang", "Penerbit", "Genre", "Harga" }));
        cbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilterActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Pengarang");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Penerbit");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Genre");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Harga");

        txtPengarang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtPenerbit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtGenre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtHarga.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText(" Search -->");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Stok");

        txtStok.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel10)))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtJudul)
                                .addComponent(txtISBN)
                                .addComponent(txtKode)
                                .addComponent(txtPengarang)
                                .addComponent(txtPenerbit)
                                .addComponent(txtGenre)
                                .addComponent(txtHarga)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtStok)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsert)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String kode_buku = txtKode.getText();
        String ISBN = txtISBN.getText();
        String judul = txtJudul.getText();
        String pengarang = txtPengarang.getText();
        String penerbit = txtPenerbit.getText();
        String genre = txtGenre.getText();
        String harga = txtHarga.getText();
        String stok = txtStok.getText();

        if (kode_buku.trim().isEmpty() && ISBN.trim().isEmpty() && judul.trim().isEmpty() && pengarang.trim().isEmpty() && penerbit.trim().isEmpty() && genre.trim().isEmpty() && harga.trim().isEmpty()&& stok.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan data buku terlebih dahulu");

        } else if (kode_buku.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Kode Buku dulu!");
        } else if (ISBN.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan ISBN dulu!");
        } else if (judul.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Judul Buku terlebih dulu!");
        } else if (pengarang.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Pengarang terlebih dulu!");
        } else if (penerbit.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Penerbit terlebih dulu!");
        } else if (genre.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Genre terlebih dulu!");
        } else if (harga.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Harga terlebih dulu!");
         } else if (stok.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Harga terlebih dulu!");
        } else {
            PreparedStatement preparedStatement;
            try {
                String sql = "INSERT INTO buku (kode_buku, ISBN, judul, pengarang, penerbit, genre, harga, stok ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                conn = DriverManager.getConnection(koneksi, user, password);
                preparedStatement = conn.prepareStatement(sql);

                preparedStatement.setInt(1, Integer.parseInt(txtKode.getText()));
                preparedStatement.setLong(2, Long.parseLong(txtISBN.getText()));
                preparedStatement.setString(3, txtJudul.getText());
                preparedStatement.setString(4, txtPengarang.getText());
                preparedStatement.setString(5, txtPenerbit.getText());
                preparedStatement.setString(6, txtGenre.getText());
                preparedStatement.setInt(7, Integer.parseInt(txtHarga.getText()));
                preparedStatement.setInt(8, Integer.parseInt(txtStok.getText()));

                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this, "data berhasil ditambahkan");

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "data gagal ditambahkan", "Error", JOptionPane.ERROR_MESSAGE);
            }
            tampil();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String kode_buku = txtKode.getText();
        String ISBN = txtISBN.getText();
        String judul = txtJudul.getText();
        String pengarang = txtPengarang.getText();
        String penerbit = txtPenerbit.getText();
        String genre = txtGenre.getText();
        String harga = txtHarga.getText();
        String stok = txtStok.getText();

        if (kode_buku.trim().isEmpty() && ISBN.trim().isEmpty() && judul.trim().isEmpty() && pengarang.trim().isEmpty() && penerbit.trim().isEmpty() && genre.trim().isEmpty() && harga.trim().isEmpty()&& stok.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan data buku terlebih dahulu sebelum di update");

        } else if (kode_buku.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Kode Buku yang akan di update!");
        } else if (ISBN.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu ISBN yang akan di update!");
        } else if (judul.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Judul Buku yang akan di update!");
        } else if (pengarang.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Pengarang yang akan di update!");
        } else if (penerbit.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Penerbit yang akan di update!");
        } else if (genre.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Genre Buku yang akan di update!");
        } else if (harga.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Harga Buku yang akan di update!");
        } else if (stok.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan dulu Stok Buku yang akan di update!");
        } else {

            try {
                String sql = "UPDATE buku set ISBN =?, judul =?, pengarang =?, penerbit =?, genre =?, harga =?, stok =? WHERE kode_buku = ?";
                conn = DriverManager.getConnection(koneksi, user, password);
                preparedStatement = conn.prepareStatement(sql);

                preparedStatement.setLong(1, Long.parseLong(txtISBN.getText()));
                preparedStatement.setString(2, txtJudul.getText());
                preparedStatement.setString(3, txtPengarang.getText());
                preparedStatement.setString(4, txtPenerbit.getText());
                preparedStatement.setString(5, txtGenre.getText());
                preparedStatement.setInt(6, Integer.parseInt(txtHarga.getText()));
                preparedStatement.setInt(7, Integer.parseInt(txtStok.getText()));
                preparedStatement.setInt(8, Integer.parseInt(txtKode.getText()));
                
                int row = preparedStatement.executeUpdate();
                if (row > 0) {
                    JOptionPane.showMessageDialog(this, "Update Berhasil");
                    tampil();
                }

            } catch (Exception e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String kode_buku;
        kode_buku = txtKode.getText();

        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);

            int jawab = JOptionPane.showConfirmDialog(null, "Silakan Konfirmasi?");
            switch (jawab) {
                case JOptionPane.YES_OPTION:
                    String deleteSql = "DELETE FROM buku WHERE kode_buku = ?";
                    PreparedStatement ps = conn.prepareStatement(deleteSql);
                    ps.setInt(1, Integer.parseInt(txtKode.getText()));
                    ps.executeUpdate();
                    ps.close();
                    conn.close();
                    bersih();
                    break;
                case JOptionPane.NO_OPTION:
                    JOptionPane.showMessageDialog(this, "Kamu menjawab tidak");
                    break;
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showConfirmDialog(null, "Cek Lagi!!!");
        }
        tampil();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        bersih();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tbBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBukuMouseClicked
        int row = tbBuku.getSelectedRow();
        txtKode.setText(tbBuku.getValueAt(row, 0).toString());
        txtISBN.setText(tbBuku.getValueAt(row, 1).toString());
        txtJudul.setText(tbBuku.getValueAt(row, 2).toString());
        txtPengarang.setText(tbBuku.getValueAt(row, 3).toString());
        txtPenerbit.setText(tbBuku.getValueAt(row, 4).toString());
        txtGenre.setText(tbBuku.getValueAt(row, 5).toString());
        txtHarga.setText(tbBuku.getValueAt(row, 6).toString());
        txtStok.setText(tbBuku.getValueAt(row, 7).toString());
    }//GEN-LAST:event_tbBukuMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        DefaultTableModel ob = (DefaultTableModel) tbBuku.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(ob);
        tbBuku.setRowSorter(obj);
        int selectedIndex = cbFilter.getSelectedIndex();
        switch (selectedIndex) {
            case 0:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 0));
                break;
            case 1:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 1));
                break;
            case 2:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 2));
                break;
            case 3:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 3));
                break;
            case 4:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 4));
                break;
            case 5:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 5));
                break;
            case 6:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 6));
                break;
            case 7:
                obj.setRowFilter(RowFilter.regexFilter(txtSearch.getText().toLowerCase(), 7));
                break;
            default:
                break;
        }

    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dashboard p = new dashboard();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFilterActionPerformed

    public final void tampil() {
        tbyaw = new DefaultTableModel(new String[]{"Kode Buku", "ISBN", "Judul Buku", "Pengarang", "Penerbit", "Genre", "Harga", "Stok"}, 0);
        String sql = "SELECT * FROM buku ORDER BY kode_buku";

        try {
            Class.forName(driver);
            try (var conn = DriverManager.getConnection(koneksi, user, password); Statement stmt = conn.createStatement()) {
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    tbyaw.addRow(new Object[]{
                        rs.getInt("kode_buku"),
                        rs.getString("ISBN").trim(),
                        rs.getString("judul").trim(),
                        rs.getString("pengarang").trim(),
                        rs.getString("penerbit").trim(),
                        rs.getString("genre").trim(),
                        rs.getInt("harga"),
                        rs.getInt("stok")
                    });
                    System.out.println(rs.getInt("kode_buku") + " " + rs.getString("ISBN") + " " + rs.getString("judul") + " " + rs.getString("pengarang")
                            + " " + rs.getString("penerbit") + " " + rs.getString("genre") + " " + rs.getInt("harga")+ " " + rs.getInt("stok"));
                }
            }

        } catch (ClassNotFoundException | SQLException ex) {
//            Logger.getLogger(pelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbBuku.setModel(tbyaw);
    }
    DefaultTableModel tbyaw;

    public void bersih() {
        txtKode.setText("");
        txtISBN.setText("");
        txtJudul.setText("");
        txtPengarang.setText("");
        txtPenerbit.setText("");
        txtGenre.setText("");
        txtHarga.setText("");
        txtStok.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(data_buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(data_buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(data_buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(data_buku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new data_buku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbBuku;
    private javax.swing.JTextField txtGenre;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtPenerbit;
    private javax.swing.JTextField txtPengarang;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
